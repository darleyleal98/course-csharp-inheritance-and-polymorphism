Herança:

É uma associação que permite que uma classe herde características e comportamentos de outra.
-> Vantagens: Reuso e polimorfismo;

Síntaxe:
: -> estende (uma classe estende outra)
base -> referência para a superclasse

Exemplo de um construtor usando Herança:

// Construto da superclasse:

        public Account(int number, string holder, double balance)
        {
            Number = number;
            Holder = holder;
            Balance = balance;
        }

// Construtor da subclasse herdando da superclasse:

        public BusinessAccount(int number, string holder, 
                               double balance, double loanLimit) : base(number, holder, balance)
        {
            LoanLimit = loanLimit;
        }

Teste na main:

using curso_heranca_e_polimorfismo.ExercicioI;
using System;

namespace Course
{
    public class Program
    {
        static void Main()
        {
            BusinessAccount businessAccount = new BusinessAccount(8010, "Darley Leal", 100.0, 500.0);
            Console.WriteLine(businessAccount.ToString());
        }
    }
}

[É POSSÍVEL HERDAR O MÉTODO TO STRING DA SUPER CLASSE:]

        public override string ToString()
        {
            string toStringForBaseClass = base.ToString(); -> Faz a imprenssão do ToString() da classe mãe

            StringBuilder stringBuilder = new StringBuilder(toStringForBaseClass); -> Instancia um novo stringbuilder

            stringBuilder.AppendLine($"Loan Limit: {LoanLimit}"); -> Faz a impressão do ToString() da classe filha

            return stringBuilder.ToString(); -> Retorna impressão do objeto
        }



AULA 2: UPCASTING AND DOWNCASTING

Upacsting -> casting da subclasse para superclasse, utiliza-se o polimorfismo;
Downcasting -> casting da superclasse para subclasse , uso da palavra AS e IS, usa-se em 
               métodos que recebem parâmetros genéricos(ex: EQUALS):
